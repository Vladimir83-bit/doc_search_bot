import os
import telebot
from telebot import types
from config import Config
from file_storage import FileStorage
from document_parser import DocumentParser


bot = telebot.TeleBot(Config.TOKEN)

def create_main_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üîç –ü–æ–∏—Å–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö"))
    markup.add(types.KeyboardButton("üìÅ –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"))
    markup.add(types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"))
    return markup

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    
    welcome_text = (
        "üìö –ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n"
        "- TXT (—Ç–µ–∫—Å—Ç)\n"
        "- PDF\n"
        "- DOCX (Word)\n"
        "- XLSX (Excel)\n\n"
        "–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø–æ–∏—Å–∫–∞."
    )
    
    bot.send_message(message.chat.id, welcome_text, 
                    reply_markup=create_main_keyboard())

@bot.message_handler(content_types=['document'])
def handle_document(message):
    
    try:
    
        if message.document.file_size > Config.MAX_FILE_SIZE:
            bot.reply_to(message, 
                        f"‚ö† –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º: {Config.MAX_FILE_SIZE//1024//1024}MB")
            return
            
        
        file_name = message.document.file_name
        file_ext = os.path.splitext(file_name)[1].lower()
        
        if file_ext not in Config.ALLOWED_EXTENSIONS:
            bot.reply_to(message, 
                        f"‚ö† –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç. –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ: {', '.join(Config.ALLOWED_EXTENSIONS)}")
            return
            
        
        file_info = bot.get_file(message.document.file_id)
        file_data = bot.download_file(file_info.file_path)
        
        
        saved_path = FileStorage.save_file(message.document.file_id, file_name, file_data)
        
        if saved_path:
            bot.reply_to(message, f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç '{file_name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        else:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞")
            
    except Exception as e:
        bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(func=lambda m: m.text == "üìÅ –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
def list_documents(message):
    """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    docs = FileStorage.get_all_docs()
    
    if docs:
        response = "üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:\n\n" + "\n".join(f"‚ñ´ {doc}" for doc in docs)
    else:
        response = "üì≠ –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
        
    bot.send_message(message.chat.id, response, 
                    reply_markup=create_main_keyboard())

@bot.message_handler(func=lambda m: m.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
def clear_documents(message):
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    if FileStorage.clear_all_docs():
        bot.send_message(message.chat.id, "‚úÖ –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã",
                        reply_markup=create_main_keyboard())
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")

@bot.message_handler(func=lambda m: m.text == "üîç –ü–æ–∏—Å–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö")
def handle_search(message):
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∏—Å–∫–∞"""
    msg = bot.send_message(message.chat.id, "üîç –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    bot.register_next_step_handler(msg, process_search_query)

def process_search_query(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    search_text = message.text.lower()
    found_in = []
    
    
    for doc in FileStorage.get_all_docs():
        file_path = os.path.join(Config.DOCS_FOLDER, doc)
        content = DocumentParser.parse_file(file_path).lower()
        
        if search_text in content:
            found_in.append(doc)
    
    
    if found_in:
        response = "üîç –ù–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö:\n\n" + "\n".join(f"üìå {doc}" for doc in found_in)
    else:
        response = "üòû –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    
    bot.send_message(message.chat.id, response,
                    reply_markup=create_main_keyboard())

if __name__ == '__main__':
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()